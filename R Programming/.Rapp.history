swirl()
load(".RData")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
bye
bye()
swirl()
library(swirl)
swirl
swirl()
main()
getwd()
ls()
x <-9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
?dir.create()
args(dir.create)
getwd()
dir.create("testdir")
main()
getwd()
ls()
x <- 9
ls()
list.files()
dir()
info()
?list.files
args("list.files")
args(list.files)
old.dir <- getwd()
ls()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
dir()
file.exist("mytest.R")
file.exist(mytest.R)
file.exist()
file.exists()
file.exists("mytest.R")
file.infor("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R" to "mytest2.R")
agrs(file.rename)
args(file.rename)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("test.dir2", recursive=TRUE)
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive#
| = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
ls()
dir()
delete.file("testdir")
file.delete("testdir")
unlink("testdir")
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10, length=30)
lengh()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my)
seq_along(my_seq)
rep(0,times)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2) each=10)
rep(c(0,1,2), each=10)
num_vect <-(0.5, -10, 6)
num_vect <- 0.5, -10, 6
num_vect <- 05 -10 6
num_vect c(0.5, -10, 6)
num_vect(c(0.5, -10, 6))
num_vect <- c(0.5, -10, 6)
c(num_vect, 0.5, -10, 6)
?c
c(0.5, -10. 6)
c(0.5, -10, 6)
?c
c(0.5,-10,6)
num_vect <- c(0.5,-10,6)
?c
num_vect <- c( 0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("MY", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Jonathan")
my_name
paste(my_name, " ")
paste(my_name, collapse= " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y"), sep=" ")
paste(1:3, c("X", "Y", "Z"), sep=" ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my)
is.na(my_data)
my_na <- is.na(my_data)
mu_na
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x
x[x>0]
x[!is.na(x) & x>0]
c(3:7)
[c(3:7)]
x[c(3:7)]
info()
x[c(x, 1:3)]
x[c(x, seq(3,7))]
x[c(x, 3:7)]
x[c(1:3)]
[x <- c(3:7)]
x[x <- c(3:7)]
[x <- c(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo =11, bar=2, norf=NA)
vect
names(vect)
vect <-c(11,2,NA)
vect2 <-c(11,2,NA)
names(vect2) <-c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
lenght(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vect)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix2 <- matrix(data=1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5)
identical( my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my.data <- data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating",#
| "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
?table
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x)
read.csv("hw1_data.csv")
data <- read.csv("hw1_data.csv")
data
nona <- data[]
x <- 4
class(x)
y <- 4L
y
class(y)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
co <- rbind(x, y)
attributes(co)
x <- list(2, "a", "b", TRUE)
x[[1]]
s <- x[[1]]
s
class(s)
x <- 1:4
y <- 2:3
x+y
z <- x  + y
class(z)
z
